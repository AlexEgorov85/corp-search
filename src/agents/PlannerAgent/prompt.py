# src/agents/PlannerAgent/prompt.py
"""
–ú–æ–¥—É–ª—å –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è PlannerAgent ‚Äî –∞–≥–µ–Ω—Ç–∞, –æ—Ç–≤–µ—á–∞—é—â–µ–≥–æ –∑–∞ –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏—é
–∏—Å—Ö–æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞—Ç–æ–º–∞—Ä–Ω—ã—Ö –ø–æ–¥–≤–æ–ø—Ä–æ—Å–æ–≤.

–û–°–ù–û–í–ù–´–ï –¶–ï–õ–ò –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê:
1. –†–∞–∑–±–∏—Ç—å —Å–ª–æ–∂–Ω—ã–π –≤–æ–ø—Ä–æ—Å –Ω–∞ –ª–æ–≥–∏—á–µ—Å–∫–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ, –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –ø–æ–¥–≤–æ–ø—Ä–æ—Å—ã.
2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É –ø–æ–¥–≤–æ–ø—Ä–æ—Å–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, q2 –∑–∞–≤–∏—Å–∏—Ç –æ—Ç q1).
3. –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω, –ø—Ä–∏–≥–æ–¥–Ω—ã–π –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
   ReasonerAgent –∏ Executor.

–°–¢–†–£–ö–¢–£–†–ê –ò–¢–û–ì–û–í–û–ì–û JSON-–û–¢–í–ï–¢–ê:
{
  "reasoning": [
    "P1: –ö–∞–∫–æ–≤–∞ –∫–æ–Ω–µ—á–Ω–∞—è —Ü–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?",
    "P2: –ú–æ–∂–Ω–æ –ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –∑–∞ –æ–¥–∏–Ω —à–∞–≥ –∏–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–Ω–æ–≥–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω?",
    "P3: –ö–∞–∫–∏–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω—É–∂–Ω—ã –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏?",
    "P4: –í –∫–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —à–∞–≥–∏?",
    "P5: –ö–∞–∫–æ–π —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞: DIRECT –∏–ª–∏ SEMANTIC?"
  ],
  "planning": {
    "needed": true|false,
    "confidence": 0.0‚Äì1.0,
    "reason": "–ö—Ä–∞—Ç–∫–∏–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç –Ω–∞ P1‚ÄìP5",
    "explanation": "–ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏"
  },
  "subquestions": [
    {
      "id": "q1",
      "text": "–ê—Ç–æ–º–∞—Ä–Ω—ã–π –ø–æ–¥–≤–æ–ø—Ä–æ—Å",
      "depends_on": [],
      "confidence": 0.0‚Äì1.0,
      "reason": "–ö—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –Ω–∞ P1‚ÄìP5",
      "explanation": "–ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ (1‚Äì2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)"
    }
  ],
  "final_decision": {
    "explanation": "–ò—Ç–æ–≥–æ–≤–æ–µ —Ä–µ–∑—é–º–µ –≤ 1‚Äì2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
  }
}

–í–ê–ñ–ù–û:
- –í—Å–µ –ø–æ–ª—è —Å `confidence` —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—é—Ç—Å—è –¥–≤—É–º—è –ø–æ—è—Å–Ω–µ–Ω–∏—è–º–∏:
  - `reason` ‚Äî —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ (–¥–ª—è –º–∞—à–∏–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏)
  - `explanation` ‚Äî —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ —Ä–µ–∑—é–º–µ (–¥–ª—è –ª–æ–≥–æ–≤ –∏ UI)
- –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—É—â–Ω–æ—Å—Ç–µ–π –ù–ï —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞ —ç—Ç–∞–ø–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî —ç—Ç–æ –∑–∞–¥–∞—á–∞ Reasoner/Executor.
- –ü—Ä–æ–º–ø—Ç —Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–∞–µ—Ç –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –≤–Ω–µ JSON.
"""

import json
import textwrap


def get_decomposition_system_prompt() -> str:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è LLM, –∑–∞–¥–∞—é—â–∏–π –ø—Ä–∞–≤–∏–ª–∞ –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏.

    –≠—Ç–æ—Ç –ø—Ä–æ–º–ø—Ç –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç:
    - –ß—Ç–æ —Ç–∞–∫–æ–µ –ø–æ–¥–≤–æ–ø—Ä–æ—Å (–∞—Ç–æ–º–∞—Ä–Ω—ã–π, —Ñ–∞–∫—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π)
    - –ö–∞–∫–∏–µ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã (P1‚ÄìP5) –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å LLM
    - –ö–∞–∫—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –∏—Ç–æ–≥–æ–≤—ã–π JSON
    - –ö–∞–∫–∏–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –∏ –∫–∞–∫ –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã

    Returns:
        str: –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –≤ –≤–∏–¥–µ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    """
    # === –§–û–†–ú–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–ù–û–ì–û –ü–†–û–ú–ü–¢–ê ===
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º textwrap.dedent –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—Å—Ç—É–ø–æ–≤
    return textwrap.dedent("""\
        –¢–´ ‚Äî PlannerAgent –≤ ReAct-—Å–∏—Å—Ç–µ–º–µ. –¢–í–û–Ø –ó–ê–î–ê–ß–ê ‚Äî –í–ï–†–ù–£–¢–¨ –¢–û–õ–¨–ö–û –í–ê–õ–ò–î–ù–´–ô JSON.

        ### üîç –ß—Ç–æ —Ç–∞–∫–æ–µ –ø–æ–¥–≤–æ–ø—Ä–æ—Å?
        –ü–æ–¥–≤–æ–ø—Ä–æ—Å ‚Äî —ç—Ç–æ **–∞—Ç–æ–º–∞—Ä–Ω—ã–π, —Ñ–∞–∫—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å**, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –¥–∞—Ç—å –æ–¥–Ω–æ–∑–Ω–∞—á–Ω—ã–π –æ—Ç–≤–µ—Ç
        (—Å–ø–∏—Å–æ–∫, —Å–∫–∞–ª—è—Ä, –æ–±—ä–µ–∫—Ç). –û–Ω –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≥–ª–∞–≥–æ–ª–æ–≤ –≤ –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω–æ–º –Ω–∞–∫–ª–æ–Ω–µ–Ω–∏–∏
        ("–Ω–∞–π–¥–∏", "–ø–æ–ª—É—á–∏", "–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π").

        ### üìå –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ (–æ—Ç–≤–µ—Ç—å –Ω–∞ P1‚ÄìP5 –∏ –≤–∫–ª—é—á–∏ –≤ "reasoning")
        P1. –ö–∞–∫–æ–≤–∞ –∫–æ–Ω–µ—á–Ω–∞—è —Ü–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è? (–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –≤ final_answer?)
        P2. –ú–æ–∂–Ω–æ –ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –∑–∞ –æ–¥–∏–Ω —à–∞–≥ –∏–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–Ω–æ–≥–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω?
        P3. –ö–∞–∫–∏–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω—É–∂–Ω—ã –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏?
        P4. –í –∫–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —à–∞–≥–∏? (–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É –ø–æ–¥–≤–æ–ø—Ä–æ—Å–∞–º–∏)
        P5. –ö–∞–∫–æ–π —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞: DIRECT –∏–ª–∏ SEMANTIC?

        ### üìè –°–¢–†–£–ö–¢–£–†–ê –û–¢–í–ï–¢–ê
        {
          "reasoning": ["P1: ...", "P2: ...", ..., "P5: ..."],
          "planning": {
            "needed": true|false,
            "confidence": 0.0‚Äì1.0,
            "reason": "...",
            "explanation": "–ü–æ—á–µ–º—É —Ç—Ä–µ–±—É–µ—Ç—Å—è/–Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏—è?"
          },
          "subquestions": [
            {
              "id": "q1",
              "text": "...",
              "depends_on": [],
              "confidence": 0.0‚Äì1.0,
              "reason": "–ö—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –Ω–∞ P1‚ÄìP5",
              "explanation": "–ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ (1‚Äì2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)"
            }
          ],
          "final_decision": {
            "explanation": "–ò—Ç–æ–≥–æ–≤–æ–µ —Ä–µ–∑—é–º–µ –≤ 1‚Äì2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
          }
        }

        ### ‚ö†Ô∏è –í–ê–ñ–ù–û
        - –ù–ò–ö–ê–ö–û–ì–û –¢–ï–ö–°–¢–ê –í–ù–ï JSON.
        - –ù–∞—á–Ω–∏ —Å '{', –∑–∞–∫–æ–Ω—á–∏ '}'.
        - –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π markdown, –ø–æ—è—Å–Ω–µ–Ω–∏—è, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏.
    """)


def get_decomposition_user_prompt(question: str, tool_registry: dict, feedback: str) -> str:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –¥–ª—è LLM.

    –°–æ–¥–µ—Ä–∂–∏—Ç:
    - –ò—Å—Ö–æ–¥–Ω—ã–π –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    - –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã (–∞–≥–µ–Ω—Ç—ã –∏ –∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–∏)
    - –û–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø–æ–ø—ã—Ç–æ–∫ (–µ—Å–ª–∏ –µ—Å—Ç—å)

    Args:
        question (str): –ò—Å—Ö–æ–¥–Ω—ã–π –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        tool_registry (dict): –°–Ω–∏–º–æ–∫ —Ä–µ–µ—Å—Ç—Ä–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        feedback (str): –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø–æ–ø—ã—Ç–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏

    Returns:
        str: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç –≤ –≤–∏–¥–µ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    """
    # === –§–û–†–ú–ò–†–û–í–ê–ù–ò–ï –ò–ù–§–û–†–ú–ê–¶–ò–ò –û–ë –ò–ù–°–¢–†–£–ú–ï–ù–¢–ê–• ===
    # –ï—Å–ª–∏ —Ä–µ–µ—Å—Ç—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –ø—É—Å—Ç ‚Äî —É–∫–∞–∑—ã–≤–∞–µ–º —ç—Ç–æ —è–≤–Ω–æ
    tools_info = (
        json.dumps(tool_registry, ensure_ascii=False, indent=2)
        if tool_registry
        else "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"
    )

    # === –°–ë–û–†–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–û–ì–û –ü–†–û–ú–ü–¢–ê ===
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º f-—Å—Ç—Ä–æ–∫–∏ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —á–∞—Å—Ç–µ–π
    return (
        f"### ‚ùì –ò—Å—Ö–æ–¥–Ω—ã–π –≤–æ–ø—Ä–æ—Å\n{question}\n\n"
        f"### üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã\n{tools_info}\n\n"
        f"### üîÑ –ü—Ä–µ–¥—ã–¥—É—â–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å\n{feedback if feedback else '–ù–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø–æ–ø—ã—Ç–æ–∫'}\n\n"
        "### üìú –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è\n"
        "1. –í—ã–ø–æ–ª–Ω–∏ –∞–Ω–∞–ª–∏–∑ —á–µ—Ä–µ–∑ P1‚ÄìP5\n"
        "2. –°—Ñ–æ—Ä–º–∏—Ä—É–π –ø–æ–¥–≤–æ–ø—Ä–æ—Å—ã, –µ—Å–ª–∏ planning.needed = true\n"
        "3. –£–∫–∞–∂–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ depends_on\n"
        "4. –í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û JSON –≤ —Ç—Ä–µ–±—É–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"
    )